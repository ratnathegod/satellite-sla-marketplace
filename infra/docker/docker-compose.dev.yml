services:
  anvil:
    image: ghcr.io/foundry-rs/foundry:latest
    container_name: satellite-anvil
    command: anvil --host 0.0.0.0 --port 8545 --chain-id 31337
    ports:
      - "8545:8545"
    networks:
      - satellite-network
    healthcheck:
      test: ["CMD", "sh", "-c", "nc -z localhost 8545"]
      interval: 10s
      timeout: 5s
      retries: 5

  ipfs:
    image: ipfs/kubo:latest
    container_name: satellite-ipfs
    ports:
      - "5001:5001"  # API
      - "8080:8080"  # Gateway
    volumes:
      - ipfs_data:/data/ipfs
    networks:
      - satellite-network
    environment:
      - IPFS_PROFILE=server
    healthcheck:
      test: ["CMD", "ipfs", "id"]
      interval: 10s
      timeout: 5s
      retries: 5

  verifier:
    build:
      context: ../../verifier
      dockerfile: Dockerfile
    container_name: satellite-verifier
    ports:
      - "8081:8081"
    environment:
      - PORT=8081
      - RPC_URL=http://anvil:8545
      - EAS_REGISTRY=0x0000000000000000000000000000000000000000
    networks:
      - satellite-network
    depends_on:
      anvil:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8081/healthz"]
      interval: 10s
      timeout: 5s
      retries: 5

  web:
    build:
      context: ../../web
      dockerfile: Dockerfile
    container_name: satellite-web
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_CHAIN_ID=31337
      - NEXT_PUBLIC_RPC_URL=http://localhost:8545
      - NEXT_PUBLIC_VERIFIER_URL=http://localhost:8081
    networks:
      - satellite-network
    depends_on:
      anvil:
        condition: service_healthy
      verifier:
        condition: service_healthy
    volumes:
      - ../../web:/app
      - /app/node_modules
      - /app/.next
    command: npm run dev

networks:
  satellite-network:
    driver: bridge

volumes:
  ipfs_data: