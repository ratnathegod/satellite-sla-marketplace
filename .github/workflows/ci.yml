name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  contracts:
    name: Test Contracts
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: nightly

      - name: Run Forge build
        run: |
          cd contracts
          forge --version
          forge build --sizes

      - name: Run Forge tests
        run: |
          cd contracts
          forge test -vvv

  verifier:
    name: Test Verifier
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'

      - name: Verify dependencies
        run: |
          cd verifier
          go mod verify

      - name: Build
        run: |
          cd verifier
          go build -v ./...

      - name: Run tests
        run: |
          cd verifier
          go test -race -coverprofile=coverage.out -covermode=atomic ./...

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./verifier/coverage.out
          flags: verifier

  web:
    name: Test Web App
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Setup PNPM
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build web app
        run: |
          cd web
          pnpm build

      - name: Run linter
        run: |
          cd web
          pnpm lint

  integration:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: [contracts, verifier, web]
    if: github.event_name == 'pull_request'
    steps:
      - uses: actions/checkout@v4

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Start services
        run: |
          docker compose -f infra/docker/docker-compose.dev.yml up -d --build
          sleep 30

      - name: Health check services
        run: |
          curl -f http://localhost:8545 || exit 1
          curl -f http://localhost:8081/healthz || exit 1
          curl -f http://localhost:3000 || exit 1

      - name: Stop services
        run: |
          docker compose -f infra/docker/docker-compose.dev.yml down -v